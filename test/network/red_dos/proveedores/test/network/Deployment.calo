Hago require("fs").rmdirSync(__dirname + "/red_dos_prototipo", { recursive: true }).

Asigno module.exports como una función con (ff) donde {

    Creo Castelog como {}.
    Asigno Castelog.metodos como {}.
    Asigno Castelog.metodos.una_red_de_servidores_http_rest_automaticos como ff.
    Creo datos como {}.

    Retorno una red de servidores HTTP REST automáticos en ruta __dirname + "/red_dos_prototipo" donde {

        [* # 1. Configuraciones # *]
        Establezco configuración con {
            directorioBase: __dirname + "/red_dos",
            servidorDeChat: "http://127.0.0.1:9955"
        }.
        
        [* # 2. Servidores # *]
        Instalo un servidor en "./identificacion" configurado con {
            SERVER_ID: "Identificacion",
            SERVER_PROTOCOL: "http",
            SERVER_HOST: "127.0.0.1",
            SERVER_PORT: 9900,
            ADMINISTRATOR_USER: "superadmin",
            ADMINISTRATOR_PASSWORD: "superadmin.123456"
        }.
        Instalo un servidor en "./productos" configurado con {
            SERVER_ID: "Productos",
            SERVER_PROTOCOL: "http",
            SERVER_HOST: "127.0.0.1",
            SERVER_PORT: 9901
        }.
        Instalo un servidor en "./carritos" configurado con {
            SERVER_ID: "Carritos",
            SERVER_PROTOCOL: "http",
            SERVER_HOST: "127.0.0.1",
            SERVER_PORT: 9902
        }.
        Instalo un servidor en "./proveedores" configurado con {
            SERVER_ID: "Proveedores",
            SERVER_PROTOCOL: "http",
            SERVER_HOST: "127.0.0.1",
            SERVER_PORT: 9903
        }.

        [* # 3. Ficheros y directorios de servidor # *]
        Agrego fichero en servidor "Identificacion" con origen __dirname + "/red_dos_data/roots/identificacion/README.md" con destino "./README.md".
        Agrego fichero en servidor "Proveedores" con origen __dirname + "/red_dos_data/roots/proveedores/README.md" con destino "./README.md".
        Agrego fichero en servidor "Carritos" con origen __dirname + "/red_dos_data/roots/carritos/README.md" con destino "./README.md".
        Agrego fichero en servidor "Productos" con origen __dirname + "/red_dos_data/roots/productos/README.md" con destino "./README.md".
        
        [* # 4. Ejecución # *]
        Inicio servidores [ ["Identificacion"], ["Productos"], ["Carritos"], ["Proveedores"] ].

        [* # 5. Ficheros y directorios de aplicación # *]
        Agrego fichero en aplicación con origen __dirname + "/red_dos_data/roots/statics/README.md" con destino "./README.md".

        [* # 6. Proyectos # *]
        Agrego un proyecto llamado "Identificacion" en servidor ["Identificacion"] autentificado por sí mismo configurado con {
            administrator_name: "auth_admin",
            administrator_password: "auth_admin",
            administrator_email: "auth_admin@email.com"
        }.
        Agrego un proyecto llamado "Productos" en servidor ["Productos"] autentificado por proyecto ["Identificacion", "Identificacion"] configurado con {}.
        Agrego un proyecto llamado "Carritos" en servidor ["Carritos"] autentificado por proyecto ["Identificacion", "Identificacion"] configurado con {}.
        Agrego un proyecto llamado "Proveedores" en servidor ["Proveedores"] autentificado por proyecto ["Identificacion", "Identificacion"] configurado con {}.

        [* # 7. Ficheros y directorios de proyecto # *]
        Agrego fichero en proyecto ["Identificacion", "Identificacion"] con origen __dirname + "/red_dos_data/roots/identificacion/identificacion/README.md" con destino "./README.md".
        Agrego fichero en proyecto ["Proveedores", "Proveedores"] con origen __dirname + "/red_dos_data/roots/proveedores/proveedores/README.md" con destino "./README.md".
        Agrego fichero en proyecto ["Carritos", "Carritos"] con origen __dirname + "/red_dos_data/roots/carritos/carritos/README.md" con destino "./README.md".
        Agrego fichero en proyecto ["Productos", "Productos"] con origen __dirname + "/red_dos_data/roots/productos/productos/README.md" con destino "./README.md".
        Agrego fichero en proyecto ["Productos", "Productos"] con origen __dirname + "/red_dos_data/roots/productos/productos/files/nodejs.png" con destino "./files/file-column.on-00000000000000.000.column-imagenes.uid-Xxxxxxxx00.as-nodejs.png".

        [* # 8. Tablas # *]

        [* # 9. Proyecto: IDENTIFICACION # *]
        Agrego una tabla llamada "correos" en proyecto ["Identificacion", "Identificacion"] configurada con {
            attributes: {},
            columns: {
                nombre: {
                    attributes: {}
                },
                en_origen: {
                    attributes: {}
                },
                en_destino: {
                    attributes: {}
                },
                en_copia: {
                    attributes: {}
                },
                fichero_adjunto: {
                    attributes: {
                        isType: "file"
                    }
                }
            }
        }.

        [* # 10. Proyecto: PROVEEDORES # *]
        Agrego una tabla llamada "proveedores" en proyecto ["Proveedores", "Proveedores"] configurada con {
            attributes: {},
            columns: {
                nombre: {
                    attributes: {
                        isType: "text",
                        isUnique: true
                    }
                },
                telefono: {
                    attributes: {
                        isType: "text"
                    }
                },
                cuentas_sociales: {
                    attributes: {
                        isType: "text",
                        isMultipleRows: true
                    }
                }
            }
        }.
        Agrego una tabla llamada "pedidos" en proyecto ["Proveedores", "Proveedores"] configurada con {
            attributes: {},
            columns: {
                titulo: {
                    attributes: {
                        isType: "text"
                    }
                },
                pedido_en_texto: {
                    attributes: {
                        isType: "text",
                        hasMultipleRows: true
                    }
                },
                proveedor: {
                    attributes: {
                        isType: "object",
                        isReferenceOf: "proveedores"
                    }
                },
                fecha_de_peticion: {
                    attributes: {
                        isType: "time"
                    }
                },
                fecha_de_resolucion: {
                    attributes: {
                        isType: "time",
                        hasDefault: null
                    }
                }
            }
        }.

        [* # Proyecto: PRODUCTOS # *]
        Agrego una tabla llamada "proveedores" en proyecto ["Productos", "Productos"] configurada con {
            attributes: {
                isExternalizedBy: {
                    host: "http://127.0.0.1:9903",
                    project: "Proveedores",
                    table: "proveedores"
                }
            }
        }.
        Agrego una tabla llamada "imagenes" en proyecto ["Productos", "Productos"] configurada con {
            attributes: {},
            columns: {
                titulo: {
                    attributes: {
                        isType: "text"
                    }
                },
                imagen: {
                    attributes: {
                        isType: "image"
                    }
                },
                detalles: {
                    attributes: {
                        isType: "text",
                        hasMultipleRows: true
                    }
                }
            }
        }.
        Agrego una tabla llamada "productos" en proyecto ["Productos", "Productos"] configurada con {
            attributes: {},
            columns: {
                nombre: {
                    attributes: {
                        isType: "text"
                    }
                },
                precio: {
                    attributes: {
                        isType: "number"
                    }
                },
                moneda_de_precio: {
                    attributes: {
                        isType: "text"
                    }
                },
                caracteristicas_tecnicas: {
                    attributes: {
                        isType: "text",
                        hasMultipleRows: true
                    }
                },
                estado: {
                    attributes: {
                        isType: "option",
                        hasOptions: [{
                            label: "En almacén",
                            value: "en almacen"
                        }, {
                            label: "Por encargo",
                            value: "por encargo"
                        }, {
                            label: "Agotado",
                            value: "agotado"
                        }],
                        hasDefault: "por encargo"
                    }
                },
                detalles_de_estado_en_almacen: {
                    attributes: {
                        isType: "text",
                        hasMultipleRows: true,
                        hasOptionConditions: [[
                            ["estado", "=", "en almacen"]
                        ]],
                        hasDefault: ""
                    }
                },
                detalles_de_estado_por_encargo: {
                    attributes: {
                        isType: "text",
                        hasMultipleRows: true,
                        hasOptionConditions: [[
                            ["estado", "=", "por encargo"]
                        ]],
                        hasDefault: ""
                    }
                },
                detalles_de_estado_agotado: {
                    attributes: {
                        isType: "text",
                        hasMultipleRows: true,
                        hasOptionConditions: [[
                            ["estado", "=", "agotado"]
                        ]],
                        hasDefault: ""
                    }
                },
                detalles: {
                    attributes: {
                        isType: "text",
                        hasMultipleRows: true
                    }
                },
                imagenes: {
                    attributes: {
                        isType: "list",
                        isReferenceOf: "imagenes"
                    }
                }
            }
        }.

        [* # Proyecto: CARRITOS # *]
        Agrego una tabla llamada "users" en proyecto ["Carritos", "Carritos"] configurada con {
            attributes: {
                isExternalizedBy: {
                    host: "http://127.0.0.1:9900",
                    project: "Identificacion",
                    table: "users"
                }
            }
        }.
        Agrego una tabla llamada "productos" en proyecto ["Carritos", "Carritos"] configurada con {
            attributes: {
                isExternalizedBy: {
                    host: "http://127.0.0.1:9901",
                    project: "Productos",
                    table: "productos"
                }
            }
        }.
        Agrego una tabla llamada "cupones_prototipo" en proyecto ["Carritos", "Carritos"] configurada con {
            attributes: {},
            columns: {
                nombre: {
                    attributes: {
                        isType: "text",
                        isUnique: true
                    }
                }
            }
        }.
        Agrego una tabla llamada "cupones" en proyecto ["Carritos", "Carritos"] configurada con {
            attributes: {},
            columns: {
                prototipo: {
                    attributes: {
                        isType: "object",
                        isReferenceOf: "cupones_prototipo"
                    }
                }
            }
        }.
        Agrego una tabla llamada "carritos" en proyecto ["Carritos", "Carritos"] configurada con {
            attributes: {},
            columns: {
                propietario: {
                    attributes: {
                        isType: "object",
                        isReferenceOf: "users",
                        isUnique: true
                    }
                },
                cupones_asociados: {
                    attributes: {
                        isType: "list",
                        isReferenceOf: "cupones"
                    }
                },
                productos_de_carrito: {
                    attributes: {
                        isType: "list",
                        isReferenceOf: "productos_de_carrito"
                    }
                }
            }
        }.
        Agrego una tabla llamada "productos_de_carrito" en proyecto ["Carritos", "Carritos"] configurada con {
            attributes: {},
            columns: {
                propietario: {
                    attributes: {
                        isType: "object",
                        isReferenceOf: "users",
                        isSelfUserId: true
                    }
                },
                producto: {
                    attributes: {
                        isType: "object",
                        isReferenceOf: "productos"
                    }
                },
                unidades: {
                    attributes: {
                        isType: "number",
                        hasMinimum: 1,
                        hasDefault: 1
                    }
                },
                comentarios_del_comprador: {
                    attributes: {
                        isType: "text",
                        hasMultipleRows: true
                    }
                },
                comentarios_del_vendedor: {
                    attributes: {
                        isType: "text",
                        hasMultipleRows: true
                    }
                }
            }
        }.

        [* # Procesos # *]
        Agrego un proceso llamado "restologia.test.org/Correos/enviar-correo" con ruta "restologia.test.org/Correos/enviar-correo.js" en proyectos [[ "Identificacion", "Identificacion" ]] basado en una función donde retorno { correo: "enviado" }.

        [* # Datos # *]
        Agrego datos en proyecto ["Identificacion", "Identificacion"] en tabla "users" a partir de require(__dirname + "/red_dos_data/users.json").
        Agrego datos en proyecto ["Identificacion", "Identificacion"] en tabla "groups" a partir de require(__dirname + "/red_dos_data/groups.json").
        Agrego datos en proyecto ["Identificacion", "Identificacion"] en tabla "privileges" a partir de require(__dirname + "/red_dos_data/privileges.json").
        Agrego datos en proyecto ["Proveedores", "Proveedores"] en tabla "proveedores" a partir de require(__dirname + "/red_dos_data/proveedores.json").
        Agrego datos en proyecto ["Productos", "Productos"] en tabla "productos" a partir de require(__dirname + "/red_dos_data/productos.json").
        Agrego datos en proyecto ["Productos", "Productos"] en tabla "imagenes" a partir de require(__dirname + "/red_dos_data/imagenes.json").
        Agrego datos en proyecto ["Carritos", "Carritos"] en tabla "carritos" a partir de require(__dirname + "/red_dos_data/carritos.json").
        Agrego datos en proyecto ["Carritos", "Carritos"] en tabla "productos_de_carrito" a partir de require(__dirname + "/red_dos_data/productos_de_carrito.json").

        [* # Hooks de función # *]
        Agrego hook de aplicación en "nativo.introduccion" basado en un código en texto donde {
            Imprimo "Inicio de sección de hooks: nativo.introduccion".
            Imprimo "Fin de sección de hooks: nativo.introduccion".
        }.
        Agrego hook de aplicación en "nativo.componentes" basado en un código en texto donde {
            Creo Pagina01Page como un componente vue2 con nombre "Pagina01Page" con plantilla {
                <div class="Pagina01Page">
                    <TitleOfPage>
                        <Horizontally>
                            <td class="width_auto"><BackButton :levels="2" /></td>
                            <td class="width_100x100">{{ $t("Pagina 01") }}</td>
                        </Horizontally>
                    </TitleOfPage>
                    <hr />
                    <div class="padding_2">
                        Estás en la página 01.
                    </div>
                </div>
            } con lógica {
                Retorno {}.
            }.
            Creo Pagina02Page como un componente vue2 con nombre "Pagina02Page" con plantilla {
                <div class="Pagina02Page">
                    <TitleOfPage>
                        <Horizontally>
                            <td class="width_auto"><BackButton :levels="2" /></td>
                            <td class="width_100x100">{{ $t("Pagina 02") }}</td>
                        </Horizontally>
                    </TitleOfPage>
                    <hr />
                    <div class="padding_2">
                        Estás en la página 02.
                    </div>
                </div>
            } con lógica {
                Retorno {}.
            }.
            Creo Pagina03Page como un componente vue2 con nombre "Pagina03Page" con plantilla {
                <div class="Pagina03Page">
                    <TitleOfPage>
                        <Horizontally>
                            <td class="width_auto"><BackButton :levels="2" /></td>
                            <td class="width_100x100">{{ $t("Pagina 03") }}</td>
                        </Horizontally>
                    </TitleOfPage>
                    <hr />
                    <div class="padding_2">
                        Estás en la página 03.
                    </div>
                </div>
            } con lógica {
                Retorno {}.
            }.
            Creo Pagina04Page como un componente vue2 con nombre "Pagina04Page" con plantilla {
                <div class="Pagina04Page">
                    <TitleOfPage>
                        <Horizontally>
                            <td class="width_auto"><BackButton :levels="2" /></td>
                            <td class="width_100x100">{{ $t("Pagina 04") }}</td>
                        </Horizontally>
                    </TitleOfPage>
                    <hr />
                    <div class="padding_2">
                        Estás en la página 04.
                    </div>
                </div>
            } con lógica {
                Retorno {}.
            }.
            Creo Pagina05Page como un componente vue2 con nombre "Pagina05Page" con plantilla {
                <div class="Pagina05Page">
                    <TitleOfPage>
                        <Horizontally>
                            <td class="width_auto"><BackButton :levels="2" /></td>
                            <td class="width_100x100">{{ $t("Pagina 05") }}</td>
                        </Horizontally>
                    </TitleOfPage>
                    <hr />
                    <div class="padding_2">
                        Estás en la página 05.
                    </div>
                </div>
            } con lógica {
                Retorno {}.
            }.
        }.
        Agrego hook de aplicación en "nativo.rutas" basado en un código en texto donde {
            Hago routes.push({
                Propiedad name como "Pagina01".
                Propiedad path como "/page/01".
                Propiedad component como Pagina01Page.
            }).
            Hago routes.push({
                Propiedad name como "Pagina02".
                Propiedad path como "/page/02".
                Propiedad component como Pagina02Page.
            }).
            Hago routes.push({
                Propiedad name como "Pagina03".
                Propiedad path como "/page/03".
                Propiedad component como Pagina03Page.
            }).
            Hago routes.push({
                Propiedad name como "Pagina04".
                Propiedad path como "/page/04".
                Propiedad component como Pagina04Page.
            }).
            Hago routes.push({
                Propiedad name como "Pagina05".
                Propiedad path como "/page/05".
                Propiedad component como Pagina05Page.
            }).
        }.
        Agrego hook de aplicación en "nativo.dependencias_globales" basado en un código en texto donde {
            Imprimo "Inicio de sección de hooks: nativo.dependencias_globales".
            Imprimo "Fin de sección de hooks: nativo.dependencias_globales".
        }.

        [* # Hooks de html # *]
        Agrego hook de aplicación en "nativo.botones_de_home_page" basado en un código en html con {
            <div>
                <ul class="BigMenuSquaresList">
                    <li v-on:click="() => $router.history.push('/page/01')"><span class="link_text">Página 01</span></li>
                    <li v-on:click="() => $router.history.push('/page/02')"><span class="link_text">Página 02</span></li>
                    <li v-on:click="() => $router.history.push('/page/03')"><span class="link_text">Página 03</span></li>
                    <li v-on:click="() => $router.history.push('/page/04')"><span class="link_text">Página 04</span></li>
                    <li v-on:click="() => $router.history.push('/page/05')"><span class="link_text">Página 05</span></li>
                </ul>
            </div>
        }.

        Recompilo aplicación estática.

    } en errores imprimo error después lanzo error.

}.

# Esto es un comentario:

Ignoro que imprimo {} extendido por { a: 8 } también extendido por { b: 9 }.


